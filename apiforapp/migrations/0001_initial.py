# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2019-08-30 08:31
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bpmmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('diastolic', models.FloatField(null=True)),
                ('systolic', models.FloatField(null=True)),
                ('pulse', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ecgmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('ECG_File', models.URLField(max_length=150)),
                ('time', models.DateTimeField(auto_now_add=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='EcgNIGmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('ECG_File', models.URLField(max_length=150)),
                ('time', models.DateTimeField(auto_now_add=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/ECG12lead/')),
            ],
        ),
        migrations.CreateModel(
            name='glucos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('bpvalue', models.FloatField(null=True)),
                ('glucose', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hbacmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('hbac', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hdlmmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('hdl', models.FloatField(null=True)),
                ('unit', models.CharField(max_length=15, null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Himobloginmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('hemoglobin', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ldlmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('ldl', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='oximeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('spo', models.FloatField(null=True)),
                ('bpm', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='pocapi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True, unique=True)),
                ('name', models.CharField(max_length=150, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phno', models.CharField(max_length=150, null=True, unique=True)),
                ('password', models.CharField(default='cygen@123', max_length=50)),
                ('height', models.FloatField(null=True)),
                ('bloodgroup', models.CharField(max_length=150, null=True)),
                ('gender', models.CharField(max_length=150, null=True)),
                ('age', models.CharField(max_length=150, null=True)),
                ('sluged', models.CharField(max_length=150, null=True)),
                ('weight', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Spirometery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('fvc', models.FloatField(null=True)),
                ('fev', models.FloatField(null=True)),
                ('pef', models.FloatField(null=True)),
                ('fevfvc', models.FloatField(null=True)),
                ('fef25', models.FloatField(null=True)),
                ('fef50', models.FloatField(null=True)),
                ('fef75', models.FloatField(null=True)),
                ('fef2575', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('temperature', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='totalcholestrol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('cholestrol', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Totalcolestrolmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('tcl', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Triglecyridesmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('tri', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Urinemeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('bil', models.FloatField(null=True)),
                ('pro', models.FloatField(null=True)),
                ('ket', models.FloatField(null=True)),
                ('leu', models.CharField(max_length=150, null=True)),
                ('ph', models.FloatField(null=True)),
                ('glu', models.FloatField(null=True)),
                ('nit', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Weightmeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_code', models.IntegerField(null=True)),
                ('weight', models.FloatField(null=True)),
                ('sent_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('unit', models.CharField(max_length=150, null=True)),
            ],
        ),
    ]
